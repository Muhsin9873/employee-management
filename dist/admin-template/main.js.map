{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/index.ts","./src/app/core/logger.service.ts","./src/app/core/route-reusable-strategy.ts","./src/app/core/services/authentication/authentication.guard.ts","./src/app/core/services/authentication/authentication.service.ts","./src/app/core/services/authentication/credentials.service.ts","./src/app/core/services/designation/designation.service.ts","./src/app/core/services/employee/employee.service.ts","./src/app/core/services/header/header.service.ts","./src/app/core/services/http/api-prefix.interceptor.ts","./src/app/core/services/http/cache.interceptor.ts","./src/app/core/services/http/error-handler.interceptor.ts","./src/app/core/services/http/http-cache.service.ts","./src/app/core/services/http/http.service.ts","./src/app/core/services/http/token.interceptor.ts","./src/app/core/services/language/i18n.service.ts","./src/app/core/services/toaster-message/toaster-message.service.ts","./src/app/core/until-destroyed.ts","./src/app/core/utils/api-urls.ts","./src/app/core/utils/third-party-libraries-config.ts","./src/app/core/utils/toastr-messages.ts","./src/app/modules/pages/add-employee/add-employee-routing.module.ts","./src/app/modules/pages/add-employee/add-employee.component.ts","./src/app/modules/pages/add-employee/add-employee.component.html","./src/app/modules/pages/add-employee/add-employee.module.ts","./src/app/modules/pages/designation-list/designation-list-routing.module.ts","./src/app/modules/pages/designation-list/designation-list.component.ts","./src/app/modules/pages/designation-list/designation-list.component.html","./src/app/modules/pages/designation-list/designation-list.module.ts","./src/app/modules/pages/employee-list/employee-list-routing.module.ts","./src/app/modules/pages/employee-list/employee-list.component.html","./src/app/modules/pages/employee-list/employee-list.component.ts","./src/app/modules/pages/employee-list/employee-list.module.ts","./src/app/modules/pages/home/home-routing.module.ts","./src/app/modules/pages/home/home.component.ts","./src/app/modules/pages/home/home.component.html","./src/app/modules/pages/home/home.module.ts","./src/app/modules/pages/pages-routing.module.ts","./src/app/modules/pages/pages.component.ts","./src/app/modules/pages/pages.component.html","./src/app/modules/pages/pages.module.ts","./src/app/shared/components/add-designation/add-designation.component.ts","./src/app/shared/components/add-designation/add-designation.component.html","./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","./src/app/shared/components/confirmation-modal/confirmation-modal.component.html","./src/app/shared/components/edit-designation/edit-designation.component.ts","./src/app/shared/components/edit-designation/edit-designation.component.html","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/index.ts","./src/app/shared/pipe/filter-employee.pipe.ts","./src/app/shared/pipe/filter.pipe.ts","./src/app/shared/shared.module.ts","./src/app/shell/shell.component.ts","./src/app/shell/shell.component.html","./src/app/shell/shell.module.ts","./src/app/shell/shell.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PagesComponent } from './modules/pages/pages.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    loadChildren:() => import('./modules/pages/pages.module').then(mod => mod.PagesModule)\r\n  },\r\n  {\r\n    path:'',\r\n    loadChildren:() => import('./modules/auth/login/login.module').then(mod => mod.LoginModule)\r\n  },\r\n  {\r\n    path:'register',\r\n    loadChildren:() => import('./modules/auth/sign-up/sign-up.module').then(mod => mod.SignUpModule)\r\n  },\r\n  \r\n  \r\n\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit, OnDestroy, ElementRef, Inject } from '@angular/core';\r\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\r\nimport { merge, Subscription } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport {  Logger } from './core';\r\n\r\nconst log = new Logger('App');\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  public googleApikey: any;\r\n  public checkGoogleApiCallStatusSubscription: Subscription;\r\n  public rolePermission: any;\r\n  credentials: any;\r\n  userDetails: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n  ) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n    this.router.events.subscribe(val => {\r\n      if (val instanceof NavigationEnd) {\r\n        if (val.url == '/') {\r\n          this.router.navigateByUrl('/login');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport {  NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ApiPrefixInterceptor, CoreModule, ErrorHandlerInterceptor } from './core';\r\nimport { TokenInterceptor } from './core/services/http/token.interceptor';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { ShellModule } from './shell/shell.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ThirdPartyLibraryConfig } from './core/utils/third-party-libraries-config';\r\nimport { PagesModule } from './modules/pages/pages.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserAnimationsModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot(),\r\n    NgbModule,\r\n    CoreModule,\r\n    SharedModule,\r\n    ShellModule,\r\n    ModalModule.forRoot(),\r\n    ToastrModule.forRoot(ThirdPartyLibraryConfig.toastrConfig),\r\n    PagesModule,\r\n    AppRoutingModule,\r\n    NgxSpinnerModule // must be imported as the last module as it contains the fallback route\r\n  ],\r\n  declarations: [AppComponent],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ApiPrefixInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorHandlerInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  \r\n})\r\nexport class AppModule { }\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\r\nimport { HttpService } from './services/http/http.service';\r\nimport { RouteReusableStrategy } from './route-reusable-strategy';\r\n\r\n\r\n@NgModule({\r\n  imports: [CommonModule, HttpClientModule, TranslateModule, RouterModule],\r\n  providers: [\r\n    {\r\n      provide: HttpClient,\r\n      useClass: HttpService\r\n    },\r\n    {\r\n      provide: RouteReuseStrategy,\r\n      useClass: RouteReusableStrategy\r\n    }\r\n  ],\r\n  declarations: [\r\n  ]\r\n})\r\nexport class CoreModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\r\n    // Import guard\r\n    if (parentModule) {\r\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\r\n    }\r\n  }\r\n}\r\n","import { from } from 'rxjs';\r\n\r\nexport * from './core.module';\r\nexport * from './services/authentication/authentication.service';\r\nexport * from './services/authentication/credentials.service';\r\nexport * from './services/authentication/authentication.guard';\r\nexport * from './services/language/i18n.service';\r\nexport * from './services/http/http.service';\r\nexport * from './services/http/http-cache.service';\r\nexport * from './services/http/api-prefix.interceptor';\r\nexport * from './services/http/cache.interceptor';\r\nexport * from './services/http/error-handler.interceptor';\r\nexport * from './route-reusable-strategy';\r\nexport * from './logger.service';\r\nexport * from './until-destroyed'","\r\n\r\n/**\r\n * The possible log levels.\r\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\r\n */\r\nexport enum LogLevel {\r\n  Off = 0,\r\n  Error,\r\n  Warning,\r\n  Info,\r\n  Debug\r\n}\r\n\r\n/**\r\n * Log output handler function.\r\n */\r\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\r\n\r\nexport class Logger {\r\n  /**\r\n   * Current logging level.\r\n   * Set it to LogLevel.Off to disable logs completely.\r\n   */\r\n  static level = LogLevel.Debug;\r\n\r\n  /**\r\n   * Additional log outputs.\r\n   */\r\n  static outputs: LogOutput[] = [];\r\n\r\n  /**\r\n   * Enables production mode.\r\n   * Sets logging level to LogLevel.Warning.\r\n   */\r\n  static enableProductionMode() {\r\n    Logger.level = LogLevel.Warning;\r\n  }\r\n\r\n  constructor(private source?: string) {}\r\n\r\n  /**\r\n   * Logs messages or objects  with the debug level.\r\n   * Works the same as console.log().\r\n   */\r\n  debug(...objects: any[]) {\r\n    this.log(console.log, LogLevel.Debug, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the info level.\r\n   * Works the same as console.log().\r\n   */\r\n  info(...objects: any[]) {\r\n    this.log(console.info, LogLevel.Info, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the warning level.\r\n   * Works the same as console.log().\r\n   */\r\n  warn(...objects: any[]) {\r\n    this.log(console.warn, LogLevel.Warning, objects);\r\n  }\r\n\r\n  /**\r\n   * Logs messages or objects  with the error level.\r\n   * Works the same as console.log().\r\n   */\r\n  error(...objects: any[]) {\r\n    this.log(console.error, LogLevel.Error, objects);\r\n  }\r\n\r\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\r\n    if (level <= Logger.level) {\r\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\r\n      func.apply(console, log);\r\n      Logger.outputs.forEach(output => output.apply(output, [this.source, level, ...objects]));\r\n    }\r\n  }\r\n}\r\n","import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\r\n\r\n/**\r\n * A route strategy allowing for explicit route reuse.\r\n * Used as a workaround for https://github.com/angular/angular/issues/18374\r\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\r\n */\r\nexport class RouteReusableStrategy extends RouteReuseStrategy {\r\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\r\n    return false;\r\n  }\r\n\r\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {}\r\n\r\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\r\n    return false;\r\n  }\r\n\r\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\r\n    return null;\r\n  }\r\n\r\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\r\n    return future.routeConfig === curr.routeConfig || future.data.reuse;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { Logger } from '../../logger.service';\r\nimport { CredentialsService } from './credentials.service';\r\n\r\nconst log = new Logger('AuthenticationGuard');\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationGuard implements CanActivate {\r\n  constructor(private router: Router, private credentialsService: CredentialsService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (this.credentialsService.isAuthenticated()) {\r\n      return true;\r\n    }\r\n    log.debug('Not authenticated, redirecting and adding redirect url...');\r\n    this.router.navigate(['/login'], { queryParams: { redirect: state.url }, replaceUrl: true });\r\n    return false;\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of, Subject } from 'rxjs';\r\n\r\nimport { Credentials, CredentialsService } from './credentials.service';\r\nimport { ApiUrls } from '../../utils/api-urls';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpService } from '../http/http.service';\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { ToasterMessageService } from '../toaster-message/toaster-message.service';\r\nimport { LocalStorageService } from '../local-storage.service';\r\n\r\nexport interface LoginContext {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\nexport interface RegisterContext {\r\n  name:string,\r\n  email: string;\r\n  password: string;\r\n  confirmpassword:string\r\n}\r\n\r\n/**\r\n * Provides a base for authentication workflow.\r\n * The login method should be replaced with proper implementation.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n  userData: LoginContext | undefined  ;\r\n  registerData: RegisterContext | undefined\r\n  \r\n  constructor(private credentialsService: CredentialsService, private http: HttpService) {}\r\n\r\n  login(context: LoginContext): Observable<Credentials> {\r\n    \r\n    const apiUrl = ApiUrls.AUTH_SERVICE.login;\r\n    return this.http.post(apiUrl, context).pipe(\r\n      map((basicUserInfo: any) => {        \r\n        this.credentialsService.setCredentials(basicUserInfo.data);\r\n        return basicUserInfo;        \r\n      })\r\n    );\r\n  }\r\n\r\n  register(context: RegisterContext): Observable<Credentials> {\r\n\r\n    const apiUrl = ApiUrls.AUTH_SERVICE.register;\r\n    return this.http.post(apiUrl,context).pipe(\r\n      map((basicUserInfo: any) => {\r\n        return basicUserInfo\r\n      })\r\n    )\r\n\r\n  }\r\n }\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Credentials {\r\n  [x: string]: any;\r\n  // Customize received credentials here\r\n  username: string;\r\n  token: string;\r\n  data: string;\r\n  status:boolean;\r\n}\r\n\r\nconst credentialsKey = 'credentials';\r\n\r\n/**\r\n * Provides storage for authentication credentials.\r\n * The Credentials interface should be replaced with proper implementation.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CredentialsService {\r\n  private _credentials: Credentials | null = null;\r\n  private remeber: any;\r\n\r\n  constructor() {\r\n    const savedCredentials = sessionStorage.getItem(credentialsKey) || localStorage.getItem(credentialsKey);\r\n    if (savedCredentials) {\r\n      this._credentials = JSON.parse(savedCredentials);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks is the user is authenticated.\r\n   * @return True if the user is authenticated.\r\n   */\r\n  isAuthenticated(): boolean {\r\n    return !!this.credentials;\r\n  }\r\n  get credentials(): Credentials | null {\r\n    return this._credentials;\r\n  }\r\n  setCredentials(credentials?: Credentials, remember?: boolean) {\r\n    this._credentials = credentials || null;\r\n    this.remeber = remember;\r\n    if (credentials) {\r\n      const storage = localStorage ;\r\n      storage.setItem(credentialsKey, JSON.stringify(credentials));\r\n    } else {\r\n      localStorage.removeItem(credentialsKey);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service';\nimport { Observable } from 'rxjs';\nimport { ApiUrls } from '../../utils/api-urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DesignationService {\n\n  constructor(private http: HttpService) { }\n\n  getDesignationList(params?:any): Observable<any> {\n    const getConfigure = ApiUrls.DESIGNATION_DETAILS.designationList  + '?page=' + params;\n    return this.http.get(getConfigure);\n  }\n\n  addDesignation(params?:any):Observable<any> {\n    const postConfigure = ApiUrls.DESIGNATION_DETAILS.designationList \n    return this.http.post(postConfigure,params)\n  }\n\n  deleteDesignation(params?:any):Observable<any> {\n    const postConfigure = ApiUrls.DESIGNATION_DETAILS.designationList + '/' + params\n    return this.http.delete(postConfigure)\n  }\n\n  editDesignation(params?:any,id?:any):Observable<any>{\n    const postConfigure = ApiUrls.DESIGNATION_DETAILS.designationList + '/' + id\n    return this.http.put(postConfigure,params)\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpService } from '../http/http.service';\nimport { Observable } from 'rxjs';\nimport { ApiUrls } from '../../utils/api-urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  constructor(private http: HttpService) { }\n\n  getEmployeeList(params?:any): Observable<any> {\n    const getConfigure = ApiUrls.EMPLOYEE_DETAILS.employeeList  + '?page=' + params;\n    return this.http.get(getConfigure);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from '../http/http.service';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ApiUrls } from '../../utils/api-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HeaderService {\r\n  public headerNameSubject = new Subject<any>();\r\n  public headerNameObservable = this.headerNameSubject.asObservable();\r\n  constructor(private http: HttpService) {}\r\n\r\n\r\n  // saveFbToken(params: any): Observable<any> {\r\n  //   const postConfigure = ApiUrls.FIREBASE.saveToken;\r\n  //   return this.http.post(postConfigure, params);\r\n  // }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n/**\r\n * Prefixes all requests not starting with `http[s]` with `environment.serverUrl`.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiPrefixInterceptor implements HttpInterceptor {\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (!/^(http|https):/i.test(request.url)) {\r\n      request = request.clone({ url: environment.serverUrl + request.url });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, Subscriber } from 'rxjs';\r\n\r\nimport { HttpCacheService } from './http-cache.service';\r\n\r\n/**\r\n * Caches HTTP requests.\r\n * Use ExtendedHttpClient fluent API to configure caching for each request.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n  private forceUpdate = false;\r\n\r\n  constructor(private httpCacheService: HttpCacheService) {}\r\n\r\n  /**\r\n   * Configures interceptor options\r\n   * @param options If update option is enabled, forces request to be made and updates cache entry.\r\n   * @return The configured instance.\r\n   */\r\n  configure(options?: { update?: boolean } | null): CacheInterceptor {\r\n    const instance = new CacheInterceptor(this.httpCacheService);\r\n    if (options && options.update) {\r\n      instance.forceUpdate = true;\r\n    }\r\n    return instance;\r\n  }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (request.method !== 'GET') {\r\n      return next.handle(request);\r\n    }\r\n\r\n    return new Observable((subscriber: Subscriber<HttpEvent<any>>) => {\r\n      const cachedData = this.forceUpdate ? null : this.httpCacheService.getCacheData(request.urlWithParams);\r\n      if (cachedData !== null) {\r\n        // Create new response to avoid side-effects\r\n        subscriber.next(new HttpResponse(cachedData as object));\r\n        subscriber.complete();\r\n      } else {\r\n        next.handle(request).subscribe(\r\n          event => {\r\n            if (event instanceof HttpResponse) {\r\n              this.httpCacheService.setCacheData(request.urlWithParams, event);\r\n            }\r\n            subscriber.next(event);\r\n          },\r\n          error => subscriber.error(error),\r\n          () => subscriber.complete()\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { Logger } from '../../logger.service';\r\n\r\nconst log = new Logger('ErrorHandlerInterceptor');\r\n\r\n/**\r\n * Adds a default error handler to all requests.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(catchError(error => this.errorHandler(error)));\r\n  }\r\n\r\n  // Customize the default error handler here if needed\r\n  private errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\r\n    if (!environment.production) {\r\n      // Do something with the error\r\n      log.error('Request error', response);\r\n    }\r\n    throw response;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\n\r\nimport { Logger } from '../../logger.service';\r\n\r\nconst log = new Logger('HttpCacheService');\r\nconst cachePersistenceKey = 'httpCache';\r\n\r\nexport interface HttpCacheEntry {\r\n  lastUpdated: Date;\r\n  data: HttpResponse<any>;\r\n}\r\n\r\n/**\r\n * Provides a cache facility for HTTP requests with configurable persistence policy.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpCacheService {\r\n  private cachedData: { [key: string]: HttpCacheEntry } = {};\r\n  private storage: Storage | null = null;\r\n\r\n  constructor() {\r\n    this.loadCacheData();\r\n  }\r\n\r\n  /**\r\n   * Sets the cache data for the specified request.\r\n   * @param url The request URL.\r\n   * @param data The received data.\r\n   * @param lastUpdated The cache last update, current date is used if not specified.\r\n   */\r\n  setCacheData(url: string, data: HttpResponse<any>, lastUpdated?: Date) {\r\n    this.cachedData[url] = {\r\n      lastUpdated: lastUpdated || new Date(),\r\n      data\r\n    };\r\n    log.debug(`Cache set for key: \"${url}\"`);\r\n    this.saveCacheData();\r\n  }\r\n\r\n  /**\r\n   * Gets the cached data for the specified request.\r\n   * @param url The request URL.\r\n   * @return The cached data or null if no cached data exists for this request.\r\n   */\r\n  getCacheData(url: string): HttpResponse<any> | null {\r\n    const cacheEntry = this.cachedData[url];\r\n\r\n    if (cacheEntry) {\r\n      log.debug(`Cache hit for key: \"${url}\"`);\r\n      return cacheEntry.data;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Gets the cached entry for the specified request.\r\n   * @param url The request URL.\r\n   * @return The cache entry or null if no cache entry exists for this request.\r\n   */\r\n  getHttpCacheEntry(url: string): HttpCacheEntry | null {\r\n    return this.cachedData[url] || null;\r\n  }\r\n\r\n  /**\r\n   * Clears the cached entry (if exists) for the specified request.\r\n   * @param url The request URL.\r\n   */\r\n  clearCache(url: string): void {\r\n    delete this.cachedData[url];\r\n    log.debug(`Cache cleared for key: \"${url}\"`);\r\n    this.saveCacheData();\r\n  }\r\n\r\n  /**\r\n   * Cleans cache entries older than the specified date.\r\n   * @param expirationDate The cache expiration date. If no date is specified, all cache is cleared.\r\n   */\r\n  cleanCache(expirationDate?: Date) {\r\n    if (expirationDate) {\r\n      Object.entries(this.cachedData).forEach(([key, value]) => {\r\n        if (expirationDate >= value.lastUpdated) {\r\n          delete this.cachedData[key];\r\n        }\r\n      });\r\n    } else {\r\n      this.cachedData = {};\r\n    }\r\n    this.saveCacheData();\r\n  }\r\n\r\n  /**\r\n   * Sets the cache persistence policy.\r\n   * Note that changing the cache persistence will also clear the cache from its previous storage.\r\n   * @param persistence How the cache should be persisted, it can be either local or session storage, or if no value is\r\n   *   provided it will be only in-memory (default).\r\n   */\r\n   /**\r\n   * Sets the cache persistence policy.\r\n   * Note that changing the cache persistence will also clear the cache from its previous storage.\r\n   * @param persistence How the cache should be persisted, it can be either local or session storage, or if no value is\r\n   *   provided it will be only in-memory (default).\r\n   */\r\n   setPersistence(persistence?: 'local' | 'session') {\r\n    this.cleanCache();\r\n    //this.storage = persistence === 'local' || persistence === 'session' ? window[persistence + 'Storage'] : null;\r\n    this.loadCacheData();\r\n  }\r\n\r\n  private saveCacheData() {\r\n    if (this.storage) {\r\n      this.storage.setItem(cachePersistenceKey, JSON.stringify(this.cachedData));\r\n    }\r\n  }\r\n\r\n  private loadCacheData() {\r\n    const data = this.storage ? this.storage.getItem(cachePersistenceKey) : null;\r\n    this.cachedData = data ? JSON.parse(data) : {};\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken, Injector, Optional, Type } from '@angular/core';\r\nimport { HttpClient, HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ErrorHandlerInterceptor } from './error-handler.interceptor';\r\nimport { CacheInterceptor } from './cache.interceptor';\r\nimport { ApiPrefixInterceptor } from './api-prefix.interceptor';\r\n\r\n// HttpClient is declared in a re-exported module, so we have to extend the original module to make it work properly\r\n// (see https://github.com/Microsoft/TypeScript/issues/13897)\r\ndeclare module '@angular/common/http/http' {\r\n  // Augment HttpClient with the added configuration methods from HttpService, to allow in-place replacement of\r\n  // HttpClient with HttpService using dependency injection\r\n  export interface HttpClient {\r\n    /**\r\n     * Enables caching for this request.\r\n     * @param forceUpdate Forces request to be made and updates cache entry.\r\n     * @return The new instance.\r\n     */\r\n    cache(forceUpdate?: boolean): HttpClient;\r\n\r\n    /**\r\n     * Skips default error handler for this request.\r\n     * @return The new instance.\r\n     */\r\n    skipErrorHandler(): HttpClient;\r\n\r\n    /**\r\n     * Do not use API prefix for this request.\r\n     * @return The new instance.\r\n     */\r\n    disableApiPrefix(): HttpClient;\r\n  }\r\n}\r\n\r\n// From @angular/common/http/src/interceptor: allows to chain interceptors\r\nclass HttpInterceptorHandler implements HttpHandler {\r\n  constructor(private next: HttpHandler, private interceptor: HttpInterceptor) {}\r\n\r\n  handle(request: HttpRequest<any>): Observable<HttpEvent<any>> {\r\n    return this.interceptor.intercept(request, this.next);\r\n  }\r\n}\r\n\r\n/**\r\n * Allows to override default dynamic interceptors that can be disabled with the HttpService extension.\r\n * Except for very specific needs, you should better configure these interceptors directly in the constructor below\r\n * for better readability.\r\n *\r\n * For static interceptors that should always be enabled (like ApiPrefixInterceptor), use the standard\r\n * HTTP_INTERCEPTORS token.\r\n */\r\nexport const HTTP_DYNAMIC_INTERCEPTORS = new InjectionToken<HttpInterceptor>('HTTP_DYNAMIC_INTERCEPTORS');\r\n\r\n/**\r\n * Extends HttpClient with per request configuration using dynamic interceptors.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService extends HttpClient {\r\n  constructor(\r\n    private httpHandler: HttpHandler,\r\n    private injector: Injector,\r\n    @Optional() @Inject(HTTP_DYNAMIC_INTERCEPTORS) private interceptors: HttpInterceptor[] = []\r\n  ) {\r\n    super(httpHandler);\r\n\r\n    if (!this.interceptors) {\r\n      // Configure default interceptors that can be disabled here\r\n      this.interceptors = [this.injector.get(ApiPrefixInterceptor), this.injector.get(ErrorHandlerInterceptor)];\r\n    }\r\n  }\r\n\r\n  cache(forceUpdate?: boolean): HttpClient {\r\n    const cacheInterceptor = this.injector\r\n      .get(CacheInterceptor as Type<CacheInterceptor>)\r\n      .configure({ update: forceUpdate });\r\n    return this.addInterceptor(cacheInterceptor);\r\n  }\r\n\r\n  skipErrorHandler(): HttpClient {\r\n    return this.removeInterceptor(ErrorHandlerInterceptor);\r\n  }\r\n\r\n  disableApiPrefix(): HttpClient {\r\n    return this.removeInterceptor(ApiPrefixInterceptor);\r\n  }\r\n\r\n  // Override the original method to wire interceptors when triggering the request.\r\n  request(method?: any, url?: any, options?: any): any {\r\n    const handler = this.interceptors.reduceRight(\r\n      (next, interceptor) => new HttpInterceptorHandler(next, interceptor),\r\n      this.httpHandler\r\n    );\r\n    return new HttpClient(handler).request(method, url, options);\r\n  }\r\n\r\n  private removeInterceptor(interceptorType: Type<HttpInterceptor>): HttpService {\r\n    return new HttpService(\r\n      this.httpHandler,\r\n      this.injector,\r\n      this.interceptors.filter(i => !(i instanceof interceptorType))\r\n    );\r\n  }\r\n\r\n  private addInterceptor(interceptor: HttpInterceptor): HttpService {\r\n    return new HttpService(this.httpHandler, this.injector, this.interceptors.concat([interceptor]));\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { CredentialsService } from '../authentication/credentials.service';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpResponse,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { ApiUrls } from '../../utils/api-urls';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { ToasterMessageService } from 'src/app/core/services/toaster-message/toaster-message.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  loginUrl: boolean | undefined;\r\n  fileUploadUrl: boolean;\r\n  headers: { [name: string]: string | string[] } | undefined;\r\n  constructor(\r\n    private router: Router,\r\n    private location: Location,\r\n    private credentialsService: CredentialsService,\r\n    public messageService: ToasterMessageService,\r\n  ) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const currentUser = this.credentialsService.credentials;\r\n    const isLoggedIn = currentUser && currentUser.access_token ? true : false;\r\n    \r\n    this.getHeaders(isLoggedIn);\r\n    request = request.clone({\r\n      setHeaders: this.headers,\r\n    });\r\n    return next.handle(request).pipe(\r\n      tap(\r\n        (event: HttpEvent<any>) => {\r\n          if (event instanceof HttpResponse) {\r\n            return event.body;\r\n          }\r\n        },\r\n        (err: any) => {\r\n          let errorMessage: string;\r\n          if (err instanceof HttpErrorResponse) {\r\n            switch (err.status) {\r\n              case 400:\r\n                errorMessage = '400 Bad request';\r\n                return err;\r\n\r\n              case 401:\r\n                errorMessage = 'Unauthorized';\r\n                this.messageService.showErrorToaster(errorMessage);\r\n                setTimeout(() => {\r\n                  this.location.replaceState('/');\r\n                  window.location.replace('/login');\r\n                  localStorage.clear();\r\n                  sessionStorage.clear();\r\n                  this.router.navigate(['login']);\r\n                }, 3000);\r\n                break;\r\n              case 403:\r\n                errorMessage = '403 Forbidden';\r\n                break;\r\n              case 404:\r\n                errorMessage = '404 Not found';\r\n                break;\r\n              case 405:\r\n                errorMessage = '405 Method Not Allowed';\r\n                break;\r\n              case 406:\r\n                errorMessage = '406 Not Acceptable';\r\n                break;\r\n              case 408:\r\n                errorMessage = '408 Request Timeout';\r\n                break;\r\n              case 413:\r\n                errorMessage = '413 Request Entity Too Large';\r\n                break;\r\n              case 422:\r\n                errorMessage = '422 Error';\r\n                break;\r\n              case 423:\r\n                errorMessage = '423 Error';\r\n                break;\r\n              case 429:\r\n                errorMessage = '429 Too Many Requests';\r\n                break;\r\n              case 500:\r\n                errorMessage = '500 Internal server error';\r\n                break;\r\n              case 501:\r\n                errorMessage = '501 Not Implemented';\r\n                break;\r\n              case 502:\r\n                errorMessage = '502 Bad Gateway';\r\n                break;\r\n              case 503:\r\n                errorMessage = '503 Service unavailable';\r\n                break;\r\n              case 504:\r\n                errorMessage = '504 Gateway Timeout';\r\n                break;\r\n              default:\r\n                errorMessage =\r\n                  'Unable to process your request. Please contact the site administrator ' +\r\n                  'if the problem persists';\r\n                break;\r\n            }\r\n          }\r\n          return err;\r\n        },\r\n        () => {}\r\n      )\r\n    );\r\n  }\r\n\r\n  public resetUrlCred() {\r\n    this.loginUrl = false;\r\n    this.fileUploadUrl = false;\r\n  }\r\n\r\n  public getHeaders( isLoggedIn: any) {\r\n    if(!isLoggedIn){\r\n      this.headers = {\r\n        'Content-Type': 'application/json',\r\n      };\r\n    }\r\n    else{\r\n      var user= this.credentialsService.credentials\r\n      var access_token =user.access_token\r\n      this.headers = {\r\n        'Authorization':`Bearer ${access_token}`\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Logger } from '../../logger.service';\r\n\r\n\r\nconst log = new Logger('I18nService');\r\nconst languageKey = 'language';\r\n\r\n/**\r\n * Pass-through function to mark a string for translation extraction.\r\n * Running `npm translations:extract` will include the given string by using this.\r\n * @param s The string to extract for translation.\r\n * @return The same string.\r\n */\r\nexport function extract(s: string) {\r\n  return s;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class I18nService {\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ToastrMessages } from '../../utils/toastr-messages';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToasterMessageService {\r\n  alertMsg: string;\r\n  msgTitle: string;\r\n  constructor(private toastr: ToastrService) {\r\n    this.alertMsg = '';\r\n    this.msgTitle = '';\r\n  }\r\n  /**\r\n   * Description: Shows an error alert message\r\n   */\r\n  public showErrorToaster(message: string, title?: string) {\r\n    this.msgTitle = title ? title : ToastrMessages.TOASTR_TITLES.error;\r\n    this.toastr.error(message);\r\n  }\r\n  /**\r\n   * Description: Shows a warning alert message\r\n   */\r\n  public showWarningToaster(message: string, title?: string) {\r\n    this.msgTitle = title ? title : ToastrMessages.TOASTR_TITLES.warning;\r\n    this.toastr.warning(message);\r\n  }\r\n  /**\r\n   * Description: Shows a success alert message\r\n   */\r\n  public showSuccessToaster(message: string, title?: string) {\r\n    this.msgTitle = title ? title : '';\r\n    this.toastr.success(this.msgTitle,message);\r\n  }\r\n  /**\r\n   * Toaster to show the response\r\n   * @param data includes the response data\r\n   */\r\n  public showToaster(data: any) {\r\n    if (data && data.isSuccess === true) {\r\n      if (data.message && data.message !== undefined) {\r\n        this.showSuccessToaster(data.message);\r\n      } else {\r\n        this.showSuccessToaster('Success');\r\n      }\r\n    }\r\n  }\r\n \r\n}\r\n","import { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nconst untilDestroyedSymbol = Symbol('untilDestroyed');\r\n\r\n/**\r\n * RxJS operator that unsubscribe from observables on destory.\r\n * Code forked from https://github.com/NetanelBasal/ngx-take-until-destroy\r\n *\r\n * IMPORTANT: Add the `untilDestroyed` operator as the last one to prevent leaks with intermediate observables in the\r\n * operator chain.\r\n *\r\n * @param instance The parent Angular component or object instance.\r\n * @param destroyMethodName The method to hook on (default: 'ngOnDestroy').\r\n * @example\r\n * ```\r\n * import { untilDestroyed } from '@app/core';\r\n *\r\n * @Component({\r\n * selector: 'app-example',\r\n *   templateUrl: './example.component.html'\r\n * })\r\n * export class ExampleComponent implements OnInit, OnDestroy {\r\n *   ngOnInit() {\r\n *     interval(1000)\r\n *       .pipe(untilDestroyed(this))\r\n *       .subscribe(val => console.log(val));\r\n *   }\r\n *\r\n *   // This method must be present, even if empty.\r\n *   ngOnDestroy() {\r\n *     // To protect you, an error will be thrown if it doesn't exist.\r\n *   }\r\n * }\r\n * ```\r\n */\r\nexport function untilDestroyed(instance: any, destroyMethodName: string = 'ngOnDestroy') {\r\n  return <T>(source: Observable<T>) => {\r\n    const originalDestroy = instance[destroyMethodName];\r\n    const hasDestroyFunction = typeof originalDestroy === 'function';\r\n\r\n    if (!hasDestroyFunction) {\r\n      throw new Error(\r\n        `${instance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`\r\n      );\r\n    }\r\n\r\n    if (!instance[untilDestroyedSymbol]) {\r\n      instance[untilDestroyedSymbol] = new Subject();\r\n\r\n      instance[destroyMethodName] = function() {\r\n        if (hasDestroyFunction) {\r\n          originalDestroy.apply(this, arguments);\r\n        }\r\n        instance[untilDestroyedSymbol].next();\r\n        instance[untilDestroyedSymbol].complete();\r\n      };\r\n    }\r\n\r\n    return source.pipe(takeUntil<T>(instance[untilDestroyedSymbol]));\r\n  };\r\n}\r\n","export class ApiUrls {\r\n    /**\r\n   * Description: Stores the api-urls related to auth service\r\n   */\r\n  public static AUTH_SERVICE = {\r\n    login: '/login',\r\n    register:'/register'\r\n  };\r\n\r\n  /**\r\n   * Description: Stores the api-urls related to employee details\r\n   */\r\n  public static EMPLOYEE_DETAILS={\r\n    employeeList:'/employees'\r\n  }\r\n\r\n  /**\r\n   * Description: Stores the api-urls related to designation details\r\n   */\r\n  public static DESIGNATION_DETAILS={\r\n    designationList:'/designations',\r\n  }\r\n}\r\n\r\n\r\n","export class ThirdPartyLibraryConfig {\r\n    /**\r\n     * Description: Configuration of toastr\r\n     */\r\n  \r\n    public static toastrConfig = {\r\n      maxOpened: 1,\r\n      timeout: 5000,\r\n      closeButton: true,\r\n      autoDismiss: true,\r\n      progressBar: true,\r\n      preventDuplicates: true,\r\n      positionClass: 'toast-top-right'\r\n    };\r\n  }\r\n  ","export class ToastrMessages {\r\n    /**\r\n     * Description: Contains an oject with custom error messages for HTTP errors\r\n     */\r\n    public static HTTP_ERROR_MESSAGES = {\r\n      DEFAULT: 'Something went wrong.',\r\n      ERROR_GENERIC_0: 'Generic error.',\r\n      ERROR_INTERNAL_2: 'Something went wrong on the server.',\r\n      ERROR_FORBIDDEN_403: 'Forbidden.',\r\n      ERROR_NOT_FOUND_404: 'Not found.',\r\n      ERROR_BAD_REQUEST_400: 'Bad request.',\r\n      ERROR_AUTHENTICATION_ERROR_401: 'Session expired, please login again.',\r\n      ERROR_AUTHENTICATION_ERROR_429: 'Something went wrong, please refresh the page.',\r\n      ERROR_SERVER_ERROR_500: 'Internal server error.',\r\n      ERROR_SERVICE_ERROR_503: 'Service unavailable.',\r\n      ERROR_GATEWAY_ERROR_504: 'Gateway timeout error, please try again later.',\r\n      ERROR_FALIURE_ERROR_FAILURE_0: 'API call failed'\r\n    };\r\n  \r\n    /**\r\n     * Description: Stores Generic titles of alert messages\r\n     */\r\n    public static TOASTR_TITLES = {\r\n      success: 'Success',\r\n      error: 'Error',\r\n      warning: 'Warning'\r\n    };\r\n  \r\n    /**\r\n     * Description: Contains the common form error messages\r\n     */\r\n    public static FORM_ERROR_MSGS = {\r\n      invalidFormat: 'Invalid Format',\r\n      invalidEmail: 'Invalid email address',\r\n      mandarotyFields: 'This field is mandatory'\r\n    };\r\n  }\r\n  ","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddEmployeeComponent } from './add-employee.component';\nimport { Shell } from 'src/app/shell/shell.service';\nimport { extract } from 'src/app/core';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    {\n      path: '',\n      component: AddEmployeeComponent,\n      data: { title: extract('Add Employee') },\n    },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AddEmployeeRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.scss']\n})\nexport class AddEmployeeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div>\n        <app-header activeItem=\"employee\"></app-header>\n    </div>\n    <div class=\"mt-3\" style=\"padding: 20px\">\n      <div class=\"desigHeader\">\n        <div>\n          <h5><b>Add Employee </b></h5>\n        </div>\n      </div>\n      <div style=\"border:1px solid rgb(204, 201, 201);padding: 16px;\">\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">First Name</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"text\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Last Name</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"text\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Joining Date</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"date\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Date of Birth</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"date\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Gender</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input type=\"radio\"  name=\"\" value=\"Male\">\n            <label for=\"html\" style=\"margin-right: 10px;\">Male</label>\n\n            <input type=\"radio\" id=\"html\" name=\"\" value=\"female\">\n            <label for=\"html\">Female</label>\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Mobile Number</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"text\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Landline</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"text\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Email Address</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"text\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Present Address</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"text\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Permanent Address</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"text\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row form-wrapp\" >\n          <div class=\"col-md-3\">Status</div>\n          <div class=\"col-md-4 select-design-wrap\">\n            <input\n              type=\"text\"\n              class=\"select-class mt-2\"\n            />\n          </div>\n        </div>\n\n      </div>\n    </div>\n</div>\n","import { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AddEmployeeRoutingModule } from './add-employee-routing.module';\nimport { AddEmployeeComponent } from './add-employee.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [AddEmployeeComponent],\n  imports: [\n    CommonModule,\n    AddEmployeeRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    NgxSpinnerModule\n  ],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class AddEmployeeModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Shell } from 'src/app/shell/shell.service';\nimport { DesignationListComponent } from './designation-list.component';\nimport { extract } from 'src/app/core';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    {\n      path: '',\n      component: DesignationListComponent,\n      data: { title: extract('Designation') },\n    },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DesignationListRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DesignationService } from 'src/app/core/services/designation/designation.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal'\nimport { AddDesignationComponent } from 'src/app/shared/components/add-designation/add-designation.component';\nimport { ConfirmationModalComponent } from 'src/app/shared/components/confirmation-modal/confirmation-modal.component';\nimport { ToasterMessageService } from 'src/app/core/services/toaster-message/toaster-message.service';\nimport { EditDesignationComponent } from 'src/app/shared/components/edit-designation/edit-designation.component';\n\n@Component({\n  selector: 'app-designation-list',\n  templateUrl: './designation-list.component.html',\n  styleUrls: ['./designation-list.component.scss']\n})\nexport class DesignationListComponent implements OnInit {\n\n  public designationList:any=[]\n  public total_count:number\n  public pageSize = 10;\n  public currPage: number = 0;\n  public searchDesignation:string=''\n  constructor( \n    public designationService: DesignationService, \n    private spinner: NgxSpinnerService ,\n    public addComponentBSModalRef: BsModalRef,\n    private modalService: BsModalService,\n    public messageService: ToasterMessageService,\n  )\n { }\n\n  ngOnInit() {\n    this.getDesignationData()\n  }\n\n  public getDesignationData(){\n    var params = this.currPage+1\n    this.spinner.show()\n    this.designationService.getDesignationList(params).subscribe((result)=>{\n      this.designationList = result.data.data;\n      this.total_count = result.data.total\n      this.spinner.hide()\n    },\n    (error)=>{\n      this.spinner.hide()\n    })\n  }\n\n  paginate(event: any){\n    this.currPage = event.page;\n    this.searchDesignation = ''\n    this.getDesignationData();\n  }\n\n  addNewDesignation(){\n    this.addComponentBSModalRef = this.modalService.show(AddDesignationComponent,{\n      class: 'modal-md modal-dialog-centered custom-model'\n    });\n\n    (<AddDesignationComponent>this.addComponentBSModalRef.content).onClose.subscribe((result) => {      \n      if (result === true) {\n        this.currPage=0\n        this.getDesignationData();\n\n      } else if (result === false) {\n        // when pressed No\n      } else {\n        // When closing the modal without no or yes\n      }\n    });\n  }\n\n  deleteDesignation(desig_id:number){\n    this.addComponentBSModalRef = this.modalService.show(ConfirmationModalComponent,{\n      class: 'modal-md modal-dialog-centered custom-model'\n    });\n\n    (<ConfirmationModalComponent>this.addComponentBSModalRef.content).onClose.subscribe((result) => {\n            \n      if (result === true) {\n        this.designationService.deleteDesignation(desig_id).subscribe((data)=>{\n          if(data.error == 'Designation cant delete'){\n            this.messageService.showErrorToaster(data.error)\n          }\n          else{\n            this.messageService.showSuccessToaster('Designation Deleted Succesfully')\n            this.getDesignationData();\n          }\n        })\n\n      } else if (result === false) {\n        // when pressed No\n      } else {\n        // When closing the modal without no or yes\n      }\n    });\n  }\n\n  editDesignation(desig_data?:any){\n    this.addComponentBSModalRef = this.modalService.show(EditDesignationComponent,{\n      class: 'modal-md modal-dialog-centered custom-model'\n    });\n\n    (<EditDesignationComponent>(this.addComponentBSModalRef.content)).editdetails(desig_data);\n    (<EditDesignationComponent>this.addComponentBSModalRef.content).onClose.subscribe((result) => {\n            \n      if (result === true) {\n        this.getDesignationData()\n\n      } else if (result === false) {\n        // when pressed No\n      } else {\n        // When closing the modal without no or yes\n      }\n    });\n  }\n\n}\n","<div>\n  <div>\n    <app-header activeItem=\"designation\"></app-header>\n  </div>\n  <div class=\"mt-3\" style=\"padding: 20px\">\n    <div class=\"desigHeader\">\n      <div>\n        <h3><b>Designation List</b></h3>\n      </div>\n      <div>\n        <button\n          type=\"button\"\n          class=\"btn qw-button-md qw-btn-primary mr-2\"\n          type=\"button\"\n          (click)=\"addNewDesignation()\"\n        >\n          Add New Record\n        </button>\n      </div>\n    </div>\n    <div class=\"search-wrapper mt-2\">\n      <input\n        type=\"text\"\n        class=\"mt-2 t-color\"\n        placeholder=\"Search by name\"\n        [(ngModel)]=\"searchDesignation\"\n      />\n    </div>\n  </div>\n  <div class=\"mt-3\" style=\"padding: 20px\">\n    <div>\n      <p-table [value]=\"designationList | appFilter : searchDesignation\">\n        <ng-template pTemplate=\"header\">\n          <tr>\n            <th>Sl.No</th>\n            <th>Name</th>\n            <th>Action</th>\n          </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\">\n          <tr>\n            <td>{{ currPage * pageSize + rowIndex + 1 }}</td>\n            <td>{{ rowData?.name }}</td>\n            <td>\n              <div class=\"d-flex icon-settings\">\n                <span>\n                  <i>\n                    <img\n                      src=\"../../../../assets/images/icons8-edit-64.png\"\n                      title=\"EDIT\"\n                      class=\"img-edit\"\n                      (click)=\"editDesignation(rowData)\"\n                  /></i>\n                </span>\n                <span>\n                  <i\n                    ><img\n                      src=\"../../../../assets/images/icon delete.png\"\n                      alt=\"\"\n                      title=\"DELETE\"\n                      class=\"img-edit delete-icon\"\n                      (click)=\"deleteDesignation(rowData.id)\"\n                  /></i>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </ng-template>\n      </p-table>\n    </div>\n    <div *ngIf=\"total_count != 0\">\n      <p-paginator\n        [rows]=\"pageSize\"\n        [first]=\"pageSize * currPage\"\n        [totalRecords]=\"total_count\"\n        (onPageChange)=\"paginate($event)\"\n      ></p-paginator>\n    </div>\n  </div>\n</div>\n\n<ngx-spinner\n  bdColor=\"rgba(0, 0, 0, 0.3)\"\n  size=\"default\"\n  color=\"#ee4a26\"\n  type=\"square-jelly-box\"\n  [fullScreen]=\"true\"\n>\n  <p style=\"color: white\">Loading...</p>\n</ngx-spinner>\n","import { NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DesignationListRoutingModule } from './designation-list-routing.module';\nimport { DesignationListComponent } from './designation-list.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TableModule } from 'primeng/table';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [DesignationListComponent],\n  imports: [\n    CommonModule,\n    DesignationListRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TableModule,\n    PaginatorModule,\n    NgxSpinnerModule\n  ],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class DesignationListModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Shell } from 'src/app/shell/shell.service';\nimport { EmployeeListComponent } from './employee-list.component';\nimport { extract } from 'src/app/core';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    {\n      path: '',\n      component: EmployeeListComponent,\n      data: { title: extract('Employee') },\n    },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeListRoutingModule { }\n","<div>\n    <div>\n      <app-header activeItem=\"employee\"></app-header>\n    </div>\n    <div class=\"mt-3\" style=\"padding: 20px;\">\n      <div class=\"desigHeader\">\n        <div>\n          <h3><b>Employee List</b></h3>\n        </div>\n        <div>\n            <button\n              type=\"button\"\n              class=\"btn qw-button-md qw-btn-primary mr-2\"\n              type=\"button\"\n              (click)=\"createNewEmployee()\"\n            >\n              Add New Record\n            </button>\n        </div>\n      </div>\n      <div class=\"search-wrapper mt-2\">\n        <input\n          type=\"text\"\n          class=\" mt-2 t-color\"\n          placeholder=\"Search by name\"\n          [(ngModel)]=\"searchEmployee\"\n        />      \n      </div>\n    </div>\n    <div class=\"mt-3\" style=\"padding: 20px;\">\n      <div>\n        <p-table [value]=\"employeeList | filterEmployee : searchEmployee\">\n          <ng-template pTemplate=\"header\">\n            <tr>\n                 <th>Sl.No </th>\n                 <th>First Name</th>\n                 <th>Last Name</th>\n                 <th>Join Date</th>\n                 <th>Date of Birth</th>\n                 <th>Gender</th>\n                 <th>Designation</th>\n            </tr>\n          </ng-template>\n          <ng-template pTemplate=\"body\" let-rowData let-rowIndex=\"rowIndex\">\n            <tr>\n                <td> {{ (currPage * pageSize) + rowIndex + 1 }} </td>\n                <td> {{ rowData?.first_name || 'N/A' }} </td>\n                <td> {{ rowData?.last_name || 'N/A'}} </td>\n                <td> {{ rowData?.join_date | date:'dd MMM yyyy' }} </td>\n                <td> {{rowData?.date_of_birth | date:'dd MMM yyyy' }} </td>\n                <td> {{ rowData?.gender }}</td>\n                <td> {{ rowData?.designation_id }}</td>\n            </tr>\n          </ng-template>\n        </p-table>\n      </div>  \n      <div *ngIf=\"total_count != 0\">\n        <p-paginator\n            [rows]=\"pageSize\"\n            [first]=\"pageSize * currPage\"\n            [totalRecords]=\"total_count\"\n            (onPageChange)=\"paginate($event)\"\n      ></p-paginator>\n      </div>\n    </div>\n  </div>\n  <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.3)\" size=\"default\" color=\"#ee4a26\" type=\"square-jelly-box\" [fullScreen]=\"true\">\n    <p style=\"color:white;\">Loading...</p>\n</ngx-spinner>","import { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from 'src/app/core/services/employee/employee.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  public employeeList:any\n  public total_count:number\n  public pageSize = 10;\n  public currPage: number = 0;\n  public searchEmployee:string = ''\n\n\n  constructor( \n     public employeeService: EmployeeService,\n     private spinner: NgxSpinnerService ,\n     public router: Router,\n  ) { }\n\n  ngOnInit() {\n    this.getEmployeeData()\n  }\n\n  public getEmployeeData(){\n    var params = this.currPage+1\n    this.spinner.show()\n    this.employeeService.getEmployeeList(params).subscribe((result)=>{\n      if(result.data){\n        this.employeeList = result.data.data;\n        this.total_count = result.data.total        \n      }\n      this.spinner.hide()\n    },\n    (error)=>{\n      this.spinner.hide()\n    })\n  }\n\n  paginate(event: any){\n    this.currPage = event.page;\n    this.searchEmployee = ''\n    this.getEmployeeData();\n  }\n\n  createNewEmployee(){\n    this.router.navigateByUrl('/employee/create' );\n  }\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeListRoutingModule } from './employee-list-routing.module';\nimport { EmployeeListComponent } from './employee-list.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TableModule } from 'primeng/table';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [EmployeeListComponent],\n  imports: [\n    CommonModule,\n    EmployeeListRoutingModule,\n    SharedModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TableModule,\n    PaginatorModule,\n    NgxSpinnerModule\n  ],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class EmployeeListModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Shell } from 'src/app/shell/shell.service';\nimport { HomeComponent } from './home.component';\nimport { extract } from 'src/app/core';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    {\n      path: '',\n      component: HomeComponent,\n      data: { title: extract('Designation') },\n    },\n  ]),\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <div>\n        <app-header activeItem=\"home\"></app-header>\n      </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    SharedModule\n  ]\n})\nexport class HomeModule { }\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: 'employee',\r\n        loadChildren: () =>\r\n          import('./employee-list/employee-list.module').then((mod) => mod.EmployeeListModule),\r\n      },\r\n      {\r\n        path: 'designation',\r\n        loadChildren: () =>\r\n          import('./designation-list/designation-list.module').then((mod) => mod.DesignationListModule),\r\n      },\r\n      {\r\n        path: 'employee/create',\r\n        loadChildren: () =>\r\n          import('./add-employee/add-employee-routing.module').then((mod) => mod.AddEmployeeRoutingModule),\r\n      },\r\n      {\r\n        path: 'home',\r\n        loadChildren: () =>\r\n          import('./home/home.module').then((mod) => mod.HomeModule),\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes), CommonModule],\r\n  exports: [RouterModule],\r\n})\r\nexport class PagesRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-pages',\r\n  templateUrl: './pages.component.html',\r\n  styleUrls: ['./pages.component.scss'],\r\n})\r\nexport class PagesComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<app-sidenav></app-sidenav>\r\n\r\n","import {\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  NgModule,\r\n  NO_ERRORS_SCHEMA,\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { PagesRoutingModule } from './pages-routing.module';\r\nimport { PagesComponent } from './pages.component';\r\nimport { TableModule } from 'primeng/table';\r\nimport { SharedModule } from 'src/app/shared';\r\nimport { EmployeeListModule } from './employee-list/employee-list.module';\r\nimport { DesignationListModule } from './designation-list/designation-list.module';\r\nimport { AddEmployeeModule } from './add-employee/add-employee.module';\r\nimport { HomeModule } from './home/home.module';\r\n\r\n@NgModule({\r\n  declarations: [PagesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    PagesRoutingModule,\r\n    SharedModule,\r\n    TableModule,\r\n    EmployeeListModule,\r\n    DesignationListModule,\r\n    AddEmployeeModule,\r\n    HomeModule\r\n  ],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n})\r\nexport class PagesModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DesignationService } from 'src/app/core/services/designation/designation.service';\nimport { ToasterMessageService } from 'src/app/core/services/toaster-message/toaster-message.service';\nimport { Subject } from 'rxjs';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-add-designation',\n  templateUrl: './add-designation.component.html',\n  styleUrls: ['./add-designation.component.scss']\n})\nexport class AddDesignationComponent implements OnInit {\n\n  public addDesignationForm: FormGroup;\n  public onClose: Subject<boolean>;\n\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public designationService: DesignationService, \n    public messageService: ToasterMessageService,\n    public modalRef: BsModalRef\n  ) { }\n\n  ngOnInit(): void {\n    this.createAddDesignationForm()\n    this.onClose = new Subject();\n  }\n\n  public createAddDesignationForm() {\n    this.addDesignationForm = this.formBuilder.group({\n      designationName: ['', Validators.required]\n    });\n  }\n\n  public addNewDesignation(){\n    var params = {\n      designation_name:this.addDesignationForm.value.designationName\n    }\n\n    this.designationService.addDesignation(params).subscribe((result)=>{\n      if(result){\n        this.messageService.showSuccessToaster(\"Designation Added Successfully\")\n        this.onClose.next(true);\n        this.modalRef.hide();\n      }      \n    })\n  }\n\n  close(){\n    this.modalRef.hide();\n  }\n\n}\n","<div class=\"popup-body-wrapper\">\n  <form [formGroup]=\"addDesignationForm\" (ngSubmit)=\"addNewDesignation()\">\n    <div class=\"header-wrap\">\n      <div class=\"main-header\">Add Designation</div>\n      <button type=\"button\" class=\"close close-btn\" (click)=\"close()\">\n        <span>&times;</span>\n      </button>\n    </div>\n    <hr />\n    <div class=\"detail-wrapper\">\n      <div class=\"head-text\">Designation Name</div>\n      <div class=\"select-design-wrap\">\n        <input\n          type=\"text\"\n          formControlName=\"designationName\"\n          class=\"select-class mt-2\"\n          placeholder=\"Enter Designation Name\"\n        />\n      </div>\n      <small\n        *ngIf=\"\n          addDesignationForm.controls.designationName.touched &&\n          addDesignationForm.controls.designationName.errors\n        \"\n        class=\"error-text\"\n        translate\n      >\n        *Designation name is required.\n      </small>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"text-right footer-buttons\">\n        <button type=\"button\" class=\"btn cancel-btn\" (click)=\"close()\">\n          cancel\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn qw-button-sm qw-btn-primary confirm-btn\"\n          [disabled]=\"!addDesignationForm.valid\"\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n@Component({\n  selector: 'app-confirmation-modal',\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.scss']\n})\nexport class ConfirmationModalComponent implements OnInit {\n\n  public onClose: Subject<boolean>;\n\n  constructor(public modalRef: BsModalRef) { }\n\n  ngOnInit(){\n    this.onClose = new Subject();\n  }\n\n  onSubmit(){\n    this.onClose.next(true);\n    this.modalRef.hide();\n  }\n\n  onCancel(){\n    this.modalRef.hide();\n  }\n\n}\n","<div>\n  <div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Are you sure</h4>\n    <button\n      type=\"button\"\n      class=\"close pull-right\"\n      aria-label=\"Close\"\n      (click)=\"onCancel()\"\n    >\n      <span aria-hidden=\"true\">&times; </span>\n    </button>\n  </div>\n  <hr />\n  <div class=\"modal-body\">\n    <p class=\"delete-head-line\">Do you want to delete ?</p>\n  </div>\n  <hr />\n  <div class=\"modal-footer\">\n    <div class=\"text-right footer-buttons\">\n      <button type=\"button\" class=\"btn cancel-btn\" (click)=\"onCancel()\">\n        No\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn qw-button-sm qw-btn-primary confirm-btn\"\n        (click)=\"onSubmit()\"\n      >\n        Yes\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DesignationService } from 'src/app/core/services/designation/designation.service';\nimport { ToasterMessageService } from 'src/app/core/services/toaster-message/toaster-message.service';\nimport { Subject } from 'rxjs';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-edit-designation',\n  templateUrl: './edit-designation.component.html',\n  styleUrls: ['./edit-designation.component.scss']\n})\nexport class EditDesignationComponent implements OnInit {\n\n  public editDesigData:any\n  public editDesignationForm: FormGroup;\n  public onClose: Subject<boolean>;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public designationService: DesignationService, \n    public messageService: ToasterMessageService,\n    public modalRef: BsModalRef,\n    private spinner: NgxSpinnerService ,\n  ) { }\n\n  ngOnInit() {\n    this.createEditDesignationForm()\n    this.onClose = new Subject();\n  }\n\n  createEditDesignationForm(){\n    this.editDesignationForm = this.formBuilder.group({\n      designationName: ['', Validators.required]\n    });\n  }\n\n  editdetails(data?:any){\n    this.editDesigData = data\n    this.patchFormData()\n    \n  }\n\n  patchFormData(){\n    this.editDesignationForm.get('designationName').patchValue(this.editDesigData.name);\n  }\n\n  editDesignation(){\n    var params = {\n      designation_name : this.editDesignationForm.value.designationName\n    }\n    this.spinner.show()\n    this.designationService.editDesignation(params,this.editDesigData.id).subscribe((res)=>{\n      if(res.message == 'Designation has been updated'){\n        this.spinner.hide()\n        this.messageService.showSuccessToaster(\"Designation updated Successfully\")\n        this.onClose.next(true);\n        this.modalRef.hide();\n      }\n      else{\n        this.spinner.hide()\n        this.modalRef.hide();\n        this.messageService.showErrorToaster(\"Update failed - Try again later.\")\n      }      \n    })\n  }\n\n  close(){\n    this.modalRef.hide();\n  }\n\n}\n","<div class=\"popup-body-wrapper\">\n  <form [formGroup]=\"editDesignationForm\">\n    <div class=\"header-wrap\">\n      <div class=\"main-header\">Edit Designation</div>\n      <button type=\"button\" class=\"close close-btn\" (click)=\"close()\">\n        <span>&times;</span>\n      </button>\n    </div>\n    <hr />\n    <div class=\"detail-wrapper\">\n      <div class=\"head-text\">Designation Name</div>\n      <div class=\"select-design-wrap\">\n        <input\n          type=\"text\"\n          formControlName=\"designationName\"\n          class=\"select-class mt-2\"\n          placeholder=\"Enter Designation Name\"\n        />\n      </div>\n      <small\n        *ngIf=\"\n          editDesignationForm.controls.designationName.touched &&\n          editDesignationForm.controls.designationName.errors\n        \"\n        class=\"error-text\"\n        translate\n      >\n        *Designation name is required.\n      </small>\n    </div>\n    <div class=\"modal-footer\">\n      <div class=\"text-right footer-buttons\">\n        <button type=\"button\" class=\"btn cancel-btn\" (click)=\"close()\">\n          cancel\n        </button>\n        <button\n          (click)=\"editDesignation()\"\n          type=\"button\"\n          class=\"btn qw-button-sm qw-btn-primary confirm-btn\"\n          [disabled]=\"!editDesignationForm.valid\"\n        >\n          Update\n        </button>\n      </div>\n    </div>\n  </form>\n</div>\n<ngx-spinner\n  bdColor=\"rgba(0, 0, 0, 0.3)\"\n  size=\"default\"\n  color=\"#ee4a26\"\n  type=\"square-jelly-box\"\n  [fullScreen]=\"true\"\n>\n  <p style=\"color: white\">Loading...</p>\n</ngx-spinner>\n","import { Component, OnDestroy, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CredentialsService } from 'src/app/core';\r\nimport { HeaderService } from 'src/app/core/services/header/header.service';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { ToasterMessageService } from 'src/app/core/services/toaster-message/toaster-message.service';\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  @Input() activeItem: any;\r\n  menu_name: any;\r\n  public hedaerValueSubscription: Subscription;\r\n  checkUpdates: Subscription;\r\n  public currentMessage: any;\r\n  constructor(\r\n    public router: Router,\r\n    public headerService: HeaderService,\r\n    public credentialsService: CredentialsService,\r\n    private spinner: NgxSpinnerService,\r\n    public messageService: ToasterMessageService,\r\n  ) {\r\n    this.checkHeaderCartValue();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n   //Logout functionality\r\n  logout() {\r\n    this.spinner.show();   \r\n    setTimeout(() => {\r\n      this.router.navigateByUrl('/login');\r\n      this.credentialsService.setCredentials();\r\n      this.spinner.hide();\r\n    }, 1000)\r\n  }\r\n\r\n  public checkHeaderCartValue() {\r\n    this.hedaerValueSubscription =\r\n      this.headerService.headerNameObservable.subscribe((data) => {\r\n        this.menu_name = data;\r\n      });\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.hedaerValueSubscription ? this.hedaerValueSubscription.unsubscribe() : '';\r\n    this.checkUpdates ? this.checkUpdates.unsubscribe() : '';\r\n  }\r\n\r\n  public navigateFunction(navigate_url:any){\r\n    this.router.navigateByUrl('/' + navigate_url );\r\n  }\r\n\r\n  \r\n}\r\n","<div class=\"main-wrapper\">\r\n  <div class=\"d-flex\">\r\n    <div>\r\n      Admin Template\r\n    </div>\r\n    <div class=\"d-flex\">\r\n      <div class=\"header-link\" [class.menu-active]=\"activeItem == 'home'\" (click)=\"navigateFunction('home')\">\r\n          Home\r\n      </div>\r\n      <div class=\"header-link\"  [class.menu-active]=\"activeItem == 'employee'\" (click)=\"navigateFunction('employee')\">\r\n        Employees\r\n      </div>\r\n      <div class=\"header-link\"  [class.menu-active]=\"activeItem == 'designation'\" (click)=\"navigateFunction('designation')\">\r\n        Designations\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    Welome Muhammed shafi P\r\n    <div class=\"dropdown\">\r\n      <div class=\"dropdown\">\r\n        <div class=\"merchant-icon\">M</div>\r\n        <div class=\"dropdown-content\">\r\n          <div class=\"dropdrown-item\">\r\n            <div class=\"logout-btn\" (click)=\"logout()\">Log Out</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n</div>","export * from './shared.module';\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterEmployee'\n})\nexport class FilterEmployeePipe implements PipeTransform {\n\n  transform(items: any[], searchText: string): any[] {   \n    \n    if (!items) {\n      return [];\n    }\n    if (!searchText) {\n      return items;\n    }\n    searchText = searchText.toLocaleLowerCase();\n\n    return items.filter(it => { \n      return (\n        it['first_name'].toLocaleLowerCase().includes(searchText) ||\n        it['last_name'].toLocaleLowerCase().includes(searchText)\n      );\n    });\n  }\n\n}\n","\r\n\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'appFilter', pure: false })\r\nexport class FilterPipe implements PipeTransform {\r\n  /**\r\n   * Pipe filters the list of elements based on the search text provided\r\n   *c\r\n   * @param items list of elements to search in\r\n   * @param searchText search string\r\n   * @returns list of elements filtered by search text or []\r\n   */\r\n  transform(items: any[], searchText: string): any[] {   \r\n    \r\n    if (!items) {\r\n      return [];\r\n    }\r\n    if (!searchText) {\r\n      return items;\r\n    }\r\n    searchText = searchText.toLocaleLowerCase();\r\n\r\n    return items.filter(it => { \r\n      return (\r\n        it['name'].toLocaleLowerCase().includes(searchText) \r\n      );\r\n    });\r\n  }\r\n}\r\n","import {\r\n  CUSTOM_ELEMENTS_SCHEMA,\r\n  NgModule,\r\n  NO_ERRORS_SCHEMA,\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { FileUploadModule } from 'primeng/fileupload';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FilterPipe } from './pipe/filter.pipe';\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { AvatarGroupModule } from 'primeng/avatargroup';\r\nimport { MessagesModule } from 'primeng/messages';\r\nimport { MessageModule } from 'primeng/message';\r\nimport { AddDesignationComponent } from './components/add-designation/add-designation.component';\r\nimport { FilterEmployeePipe } from './pipe/filter-employee.pipe';\r\nimport { ConfirmationModalComponent } from './components/confirmation-modal/confirmation-modal.component';\r\nimport { EditDesignationComponent } from './components/edit-designation/edit-designation.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    InputSwitchModule,\r\n    ModalModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FileUploadModule,\r\n    HttpClientModule,\r\n    FilterPipeModule,\r\n    NgxSpinnerModule,\r\n    MessagesModule,\r\n    MessageModule,\r\n    AvatarGroupModule,\r\n    \r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    FilterPipe,\r\n    MessagesModule,\r\n    NgxSpinnerModule,  \r\n    FilterEmployeePipe \r\n  ],\r\n\r\n  declarations: [\r\n    HeaderComponent,\r\n    FilterPipe,\r\n    AddDesignationComponent,\r\n    FilterEmployeePipe,\r\n    ConfirmationModalComponent,\r\n    EditDesignationComponent,\r\n  ],\r\n  entryComponents: [\r\n    AddDesignationComponent,\r\n    EditDesignationComponent\r\n  ],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n\r\n  providers: [\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-shell',\r\n  templateUrl: './shell.component.html',\r\n  styleUrls: ['./shell.component.scss']\r\n})\r\nexport class ShellComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<!-- <router-outlet></router-outlet> -->\r\n<main class=\"body-offset\">\r\n  <div class=\"customWrapper\">\r\n    <div class=\"body-wrapper\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</main>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ShellRoutingModule } from './shell-routing.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../shared';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FilterPipeModule } from 'ngx-filter-pipe';\r\nimport { ShellComponent } from './shell.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ShellComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TranslateModule,\r\n    NgbModule,\r\n    SharedModule,\r\n    RouterModule,\r\n    ModalModule.forRoot(),\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class ShellModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Route, Routes } from '@angular/router';\r\nimport { AuthenticationGuard } from '../core';\r\nimport { ShellComponent } from './shell.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n/**\r\n * Provides helper methods to create routes.\r\n */\r\nexport class Shell {\r\n  /**\r\n   * Creates routes using the shell component and authentication.\r\n   * @param routes The routes to add.\r\n   * @return The new route using shell as the base.\r\n   */\r\n  static childRoutes(routes: Routes): Route {\r\n    return {\r\n      path: '',\r\n      component: ShellComponent,\r\n      children: routes,\r\n      canActivate: [AuthenticationGuard],\r\n      // Reuse ShellComponent instance when navigating between child views\r\n      data: { reuse: true }\r\n    };\r\n  }\r\n}\r\n\r\n","export const environment = {\r\n  production: false,\r\n  hmr: true,\r\n  serverUrl: 'http://training.pixbit.in/api', \r\n};\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app/app.module';\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}