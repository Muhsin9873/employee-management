{"version":3,"sources":["./src/app/modules/auth/auth.component.ts","./src/app/modules/auth/auth.component.html","./src/app/modules/auth/sign-up/sign-up.component.ts","./src/app/modules/auth/sign-up/sign-up.component.html"],"names":[],"mappings":"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","file":"default-src_app_modules_auth_auth_component_ts-src_app_modules_auth_sign-up_sign-up_component_ts.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { AuthenticationService } from 'src/app/core/services/authentication/authentication.service';\nimport { finalize } from 'rxjs/operators';\nimport { ToasterMessageService } from 'src/app/core/services/toaster-message/toaster-message.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\n\n  loginForm!: FormGroup;\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private spinner: NgxSpinnerService,\n    private authenticationService: AuthenticationService,\n    public messageService: ToasterMessageService,\n  ) { \n    this.createForm();\n  }\n\n  ngOnInit(): void {\n  }\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      name: ['',[Validators.required]],\n      email: ['',[Validators.required]],\n      password: ['', [Validators.required]],\n      confirmpassword: ['', [Validators.required]],\n    });\n  }\n\n  register() {\n    const params ={\n      name:this.loginForm.value.name,\n      email:this.loginForm.value.email,\n      password:this.loginForm.value.password,\n      confirmpassword:this.loginForm.value.confirmpassword\n    }\n\n    const register$ = this.authenticationService.register(params);\n    register$\n    .pipe(\n      finalize(() => {\n        this.loginForm.markAsPristine();\n      })\n    )\n    .subscribe(\n      (credentials: any) => {\n        this.messageService.showSuccessToaster(\"New user successfully registered\")\n        if(credentials){\n          this.router.navigate(['login'])\n        }\n      },\n      (error) => {        \n        this.messageService.showErrorToaster(error.error.message)\n      }\n    )\n  }\n\n}\n","<div class=\"login-header\">\n  <div>\n    <h5><b>Employee Manager</b></h5>\n  </div>\n  <div class=\"login-wrapper\">\n    <h6 style=\"margin-right: 10px\" class=\"loginText\" routerLink=\"/login\">Login</h6>\n    <h6 routerLink=\"/register\" class=\"registerText\">Register</h6>\n  </div>\n</div>\n<hr />\n<div class=\"login-signup-box\">\n  <div class=\"login-container\">\n    <div class=\"header-wrap\">\n      <div class=\"main-header\">Register</div>\n    </div>\n    <div>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"register()\">\n        <div\n          class=\"qw-form-group mb-4\"\n          [class.qw-input-validation]=\"\n            loginForm.controls.name.invalid &&\n            !loginForm.controls.name.untouched\n          \"\n        >\n          <label class=\"qw-form-label\">Name</label>\n          <input\n            class=\"form-control qw-form-control-prepend\"\n            formControlName=\"name\"\n            required\n          />\n          <small\n            *ngIf=\"\n              loginForm.controls.name.touched &&\n              loginForm.controls.name.errors?.required\n            \"\n            class=\"validation-text\"\n            translate\n          >\n            Enter a valid name.\n          </small>\n        </div>\n        <div\n          class=\"qw-form-group mb-4\"\n          [class.qw-input-validation]=\"\n            loginForm.controls.email.invalid &&\n            !loginForm.controls.email.untouched\n          \"\n        >\n          <label class=\"qw-form-label\">Email Address</label>\n          <input\n            class=\"form-control qw-form-control-prepend\"\n            formControlName=\"email\"\n            required\n          />\n          <small\n            *ngIf=\"\n              loginForm.controls.email.touched &&\n              loginForm.controls.email.errors?.required\n            \"\n            class=\"validation-text\"\n            translate\n          >\n            Enter a valid Email Address.\n          </small>\n        </div>\n        <div\n          class=\"qw-form-group\"\n          [class.qw-input-validation]=\"\n            loginForm.controls.password.invalid &&\n            !loginForm.controls.password.untouched\n          \"\n        >\n          <label for=\"customerName\" class=\"qw-form-label\">Password</label>\n          <input\n            name=\"password\"\n            class=\"form-control qw-form-control-prepend-last\"\n            type=\"password\"\n            formControlName=\"password\"\n            required\n          />\n          <small\n            *ngIf=\"\n              loginForm.controls.password.invalid &&\n              !loginForm.controls.password.untouched\n            \"\n            class=\"validation-text\"\n            translate\n          >\n            Enter a valid password\n          </small>\n        </div>\n        <div\n          class=\"qw-form-group\"\n          [class.qw-input-validation]=\"\n            loginForm.controls.password.invalid &&\n            !loginForm.controls.password.untouched\n          \"\n        >\n          <label for=\"customerName\" class=\"qw-form-label\"\n            >Confirm Password</label\n          >\n          <input\n            name=\"password\"\n            class=\"form-control qw-form-control-prepend-last\"\n            type=\"password\"\n            formControlName=\"confirmpassword\"\n            required\n          />\n          <small\n            *ngIf=\"\n              loginForm.controls.confirmpassword.invalid &&\n              !loginForm.controls.confirmpassword.untouched\n            \"\n            class=\"validation-text\"\n            translate\n          >\n            Enter a valid password\n          </small>\n        </div>\n        <div class=\"lg-button-wrapper mt-4\">\n          <button\n            class=\"btn qw-button-wd qw-btn-primary\"\n            type=\"submit\"\n            [disabled]=\"loginForm.invalid\"\n          >\n            <span translate>Register</span>\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}